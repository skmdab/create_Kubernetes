---
- hosts: k8s
  become: true
  tasks:
  - name: Disable Swap
    shell: swapoff -a 

  - name: Disable swap in /etc/fstab
    shell: sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

  - name: Enable kernel settings
    lineinfile:
        path: /etc/modules-load.d/k8s.conf
        line: "{{ item }}"
        create: yes
    with_items:
        - overlay
        - br_netfilter

  - name: Enable Modules
    shell: modprobe overlay && modprobe br_netfilter

  - name: Enable IP tables
    lineinfile:
        path: /etc/sysctl.d/k8s.conf
        line: "{{ item }}"
        create: yes
    with_items:
        - net.bridge.bridge-nf-call-iptables = 1
        - net.bridge.bridge-nf-call-ip6tables = 1
        - net.ipv4.ip_forward = 1

  - name: Relaod IP tables
    shell: sysctl --system

  - name: Update Repository  
    apt:
     update_cache: yes
     
  - name: Install containerd run time dependencies
    apt:
      name: [ 'ca-certificates', 'curl', 'gnupg', 'lsb-release' ]
      state: present

  - name: Create directory
    file:
      path: /etc/apt/keyrings
      state: directory

  - name: Download and install Docker GPG key
    shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg

  - name: add Docker repository
    shell: |
        echo "deb [arch=\"$(dpkg --print-architecture)\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

  - name: Update Repository  
    apt:
     update_cache: yes
  
  - name: Install containerd
    apt:
      name: containerd.io
      state: present

  - name: Generate default configuration file for containerd
    shell: containerd config default > /etc/containerd/config.toml

  - name: Update containerd configuration
    shell: sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml && sed -i 's|sandbox_image = "registry.k8s.io/pause:3.6"|sandbox_image = "registry.k8s.io/pause:3.9"|g' /etc/containerd/config.toml


  - name: Enable the containerd
    systemd:
     name: containerd
     enabled: true

  - name: Start the Containerd service
    service:
     name: containerd
     state: restarted

  - name: Update the apt package & install packages needed to use the Kubernetes apt repository
    apt:
     update_cache: yes
     name: apt-transport-https
     state: present

  - name: Download the Google Cloud public signing key
    shell: curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg

  - name: Add the Kubernetes apt repository
    lineinfile:
      path: /etc/apt/sources.list.d/kubernetes.list
      line: "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"
      create: yes

  - name: Update Repository  
    apt:
     update_cache: yes
 
  - name: Install kubelet, kubeadm and kubectl, and pin their version
    apt:
     name: [ 'kubelet', 'kubeadm', 'kubectl' ]
     state: present

  - name: Hold packages to prevent automatic upgrades or removals
    dpkg_selections:
      name: "{{ item }}"
      selection: hold
    loop:
    - kubelet
    - kubeadm
    - kubectl

  - name: Reload systemd daemon
    systemd:
        daemon_reload: true

  - name: Enable the kubelet service
    systemd:
      name: kubelet
      enabled: true
  
  - name: Start kubelet service
    service:
      name: kubelet
      state: started

  - name: Enable Containerd commands
    blockinfile:
        dest: /etc/crictl.yaml
        create: yes
        insertafter:
        block: |
          runtime-endpoint: unix:///run/containerd/containerd.sock
          image-endpoint: unix:///run/containerd/containerd.sock
          timeout: 2
          debug: false
          pull-image-on-create: false
...
